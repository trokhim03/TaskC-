#include <iostream>

class Tree {
public:
    virtual void draw() const = 0;
};

class PineTree : public Tree {
public:
    void draw() const override {
        std::cout << "Drawing 1:\n";
        std::cout << "/\\\n";
        std::cout << "//\\\\\n";
    }
};

class ChristmasTree : public Tree {
public:
    void draw() const override {
        std::cout << "Drawing 2:\n";
        std::cout << "/\\\n";
        std::cout << "/**\\\n";
    }
};

class PalmTree : public Tree {
public:
    void draw() const override {
        std::cout << "Drawing 3:\n";
        std::cout << "/\\\n";
        std::cout << "/++\\\n";
    }
};

int main() {
    Tree* treeTable[3];

    PineTree pineTree;
    ChristmasTree christmasTree;
    PalmTree palmTree;

    treeTable[0] = &pineTree;
    treeTable[1] = &christmasTree;
    treeTable[2] = &palmTree;

    for (int i = 0; i < 3; ++i) {
        treeTable[i]->draw();
        std::cout << '\n';
    }

    return 0;
}

